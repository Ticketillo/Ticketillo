/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NativeMetaTransaction,
  NativeMetaTransactionInterface,
} from "../NativeMetaTransaction";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b50610f4d8061003a6000396000f3fe60806040526004361061004a5760003560e01c80630c53c51c1461004f5780630f7e59701461007f57806320379ee5146100aa5780632d0335ab146100d55780633408e47014610112575b600080fd5b6100696004803603810190610064919061082e565b61013d565b6040516100769190610944565b60405180910390f35b34801561008b57600080fd5b506100946103af565b6040516100a191906109bb565b60405180910390f35b3480156100b657600080fd5b506100bf6103e8565b6040516100cc91906109ec565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610a07565b6103f2565b6040516101099190610a4d565b60405180910390f35b34801561011e57600080fd5b5061012761043b565b6040516101349190610a4d565b60405180910390f35b606060006040518060600160405280600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781525090506101c08782878787610448565b6101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690610ada565b60405180910390fd5b6102526001600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461055090919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8733886040516102c893929190610b2a565b60405180910390a16000803073ffffffffffffffffffffffffffffffffffffffff16888a6040516020016102fd929190610bec565b6040516020818303038152906040526040516103199190610c14565b6000604051808303816000865af19150503d8060008114610356576040519150601f19603f3d011682016040523d82523d6000602084013e61035b565b606091505b5091509150816103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790610c77565b60405180910390fd5b80935050505095945050505050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000804690508091505090565b60008073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036104b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104af90610d09565b60405180910390fd5b60016104cb6104c687610566565b6105ce565b838686604051600081526020016040526040516104eb9493929190610d38565b6020604051602081039080840390855afa15801561050d573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b6000818361055e9190610dac565b905092915050565b6000604051806080016040528060438152602001610ed56043913980519060200120826000015183602001518460400151805190602001206040516020016105b19493929190610de0565b604051602081830303815290604052805190602001209050919050565b60006105d86103e8565b826040516020016105ea929190610e9d565b604051602081830303815290604052805190602001209050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106468261061b565b9050919050565b6106568161063b565b811461066157600080fd5b50565b6000813590506106738161064d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106cc82610683565b810181811067ffffffffffffffff821117156106eb576106ea610694565b5b80604052505050565b60006106fe610607565b905061070a82826106c3565b919050565b600067ffffffffffffffff82111561072a57610729610694565b5b61073382610683565b9050602081019050919050565b82818337600083830152505050565b600061076261075d8461070f565b6106f4565b90508281526020810184848401111561077e5761077d61067e565b5b610789848285610740565b509392505050565b600082601f8301126107a6576107a5610679565b5b81356107b684826020860161074f565b91505092915050565b6000819050919050565b6107d2816107bf565b81146107dd57600080fd5b50565b6000813590506107ef816107c9565b92915050565b600060ff82169050919050565b61080b816107f5565b811461081657600080fd5b50565b60008135905061082881610802565b92915050565b600080600080600060a0868803121561084a57610849610611565b5b600061085888828901610664565b955050602086013567ffffffffffffffff81111561087957610878610616565b5b61088588828901610791565b9450506040610896888289016107e0565b93505060606108a7888289016107e0565b92505060806108b888828901610819565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b838110156108ff5780820151818401526020810190506108e4565b60008484015250505050565b6000610916826108c5565b61092081856108d0565b93506109308185602086016108e1565b61093981610683565b840191505092915050565b6000602082019050818103600083015261095e818461090b565b905092915050565b600081519050919050565b600082825260208201905092915050565b600061098d82610966565b6109978185610971565b93506109a78185602086016108e1565b6109b081610683565b840191505092915050565b600060208201905081810360008301526109d58184610982565b905092915050565b6109e6816107bf565b82525050565b6000602082019050610a0160008301846109dd565b92915050565b600060208284031215610a1d57610a1c610611565b5b6000610a2b84828501610664565b91505092915050565b6000819050919050565b610a4781610a34565b82525050565b6000602082019050610a626000830184610a3e565b92915050565b7f5369676e657220616e64207369676e617475726520646f206e6f74206d61746360008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ac4602183610971565b9150610acf82610a68565b604082019050919050565b60006020820190508181036000830152610af381610ab7565b9050919050565b610b038161063b565b82525050565b6000610b148261061b565b9050919050565b610b2481610b09565b82525050565b6000606082019050610b3f6000830186610afa565b610b4c6020830185610b1b565b8181036040830152610b5e818461090b565b9050949350505050565b600081905092915050565b6000610b7e826108c5565b610b888185610b68565b9350610b988185602086016108e1565b80840191505092915050565b60008160601b9050919050565b6000610bbc82610ba4565b9050919050565b6000610bce82610bb1565b9050919050565b610be6610be18261063b565b610bc3565b82525050565b6000610bf88285610b73565b9150610c048284610bd5565b6014820191508190509392505050565b6000610c208284610b73565b915081905092915050565b7f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000600082015250565b6000610c61601c83610971565b9150610c6c82610c2b565b602082019050919050565b60006020820190508181036000830152610c9081610c54565b9050919050565b7f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360008201527f49474e4552000000000000000000000000000000000000000000000000000000602082015250565b6000610cf3602583610971565b9150610cfe82610c97565b604082019050919050565b60006020820190508181036000830152610d2281610ce6565b9050919050565b610d32816107f5565b82525050565b6000608082019050610d4d60008301876109dd565b610d5a6020830186610d29565b610d6760408301856109dd565b610d7460608301846109dd565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db782610a34565b9150610dc283610a34565b9250828201905080821115610dda57610dd9610d7d565b5b92915050565b6000608082019050610df560008301876109dd565b610e026020830186610a3e565b610e0f6040830185610afa565b610e1c60608301846109dd565b95945050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000610e66600283610e25565b9150610e7182610e30565b600282019050919050565b6000819050919050565b610e97610e92826107bf565b610e7c565b82525050565b6000610ea882610e59565b9150610eb48285610e86565b602082019150610ec48284610e86565b602082019150819050939250505056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a26469706673582212208cab4d665d79944d138ff93f0c5b4221d41392dffbe947f117609b9ed1aa8ff864736f6c63430008120033";

export class NativeMetaTransaction__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NativeMetaTransaction> {
    return super.deploy(overrides || {}) as Promise<NativeMetaTransaction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NativeMetaTransaction {
    return super.attach(address) as NativeMetaTransaction;
  }
  connect(signer: Signer): NativeMetaTransaction__factory {
    return super.connect(signer) as NativeMetaTransaction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeMetaTransactionInterface {
    return new utils.Interface(_abi) as NativeMetaTransactionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeMetaTransaction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NativeMetaTransaction;
  }
}
